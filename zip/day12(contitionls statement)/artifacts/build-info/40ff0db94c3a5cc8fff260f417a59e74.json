{
	"id": "40ff0db94c3a5cc8fff260f417a59e74",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.0",
	"solcLongVersion": "0.5.0+commit.1d4f565a",
	"input": {
		"language": "Solidity",
		"sources": {
			"day12(contitionls statement)/conditional.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.5.0 <0.9.0;\r\n\r\ncontract ConditionsStatements{\r\n    // if else we have to write inside the functions\r\n    function check(uint age) public view returns(string memory){\r\n        string memory str;\r\n        if(age<18){\r\n            str=\"you are Child\";\r\n        }\r\n        else if(age>=18 && age<=40){\r\n            str=\"you are Adult\";\r\n        }\r\n        else {\r\n            str=\"you are Old\";\r\n        }\r\n        return str;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"day12(contitionls statement)/conditional.sol": {
				"ConditionsStatements": {
					"abi": [
						{
							"constant": true,
							"inputs": [
								{
									"name": "age",
									"type": "uint256"
								}
							],
							"name": "check",
							"outputs": [
								{
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"day12(contitionls statement)/conditional.sol\":68:485  contract ConditionsStatements{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"day12(contitionls statement)/conditional.sol\":68:485  contract ConditionsStatements{\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"day12(contitionls statement)/conditional.sol\":68:485  contract ConditionsStatements{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x5f72f450\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"day12(contitionls statement)/conditional.sol\":158:482  function check(uint age) public view returns(string memory){\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_3\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_3:\n        /* \"day12(contitionls statement)/conditional.sol\":158:482  function check(uint age) public view returns(string memory){\r... */\n      pop\n      tag_4\n      0x4\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_5\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x0\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_5:\n        /* \"day12(contitionls statement)/conditional.sol\":158:482  function check(uint age) public view returns(string memory){\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_6)\n    tag_4:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x0\n        /* \"--CODEGEN--\":8:108   */\n    tag_7:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_7)\n    tag_8:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"day12(contitionls statement)/conditional.sol\":158:482  function check(uint age) public view returns(string memory){\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_10\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x1\n      dup4\n      0x20\n      sub\n      0x100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_10:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_6:\n        /* \"day12(contitionls statement)/conditional.sol\":203:216  string memory */\n      0x60\n        /* \"day12(contitionls statement)/conditional.sol\":228:245  string memory str */\n      dup1\n        /* \"day12(contitionls statement)/conditional.sol\":263:265  18 */\n      0x12\n        /* \"day12(contitionls statement)/conditional.sol\":259:262  age */\n      dup4\n        /* \"day12(contitionls statement)/conditional.sol\":259:265  age<18 */\n      lt\n        /* \"day12(contitionls statement)/conditional.sol\":256:454  if(age<18){\r... */\n      iszero\n      tag_12\n      jumpi\n        /* \"day12(contitionls statement)/conditional.sol\":281:300  str=\"you are Child\" */\n      0x40\n      dup1\n      mload\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      0xd\n      dup2\n      mstore\n      0x20\n      add\n      0x796f7520617265204368696c6400000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"day12(contitionls statement)/conditional.sol\":256:454  if(age<18){\r... */\n      jump(tag_13)\n    tag_12:\n        /* \"day12(contitionls statement)/conditional.sol\":335:337  18 */\n      0x12\n        /* \"day12(contitionls statement)/conditional.sol\":330:333  age */\n      dup4\n        /* \"day12(contitionls statement)/conditional.sol\":330:337  age>=18 */\n      lt\n      iszero\n        /* \"day12(contitionls statement)/conditional.sol\":330:348  age>=18 && age<=40 */\n      dup1\n      iszero\n      tag_14\n      jumpi\n      pop\n        /* \"day12(contitionls statement)/conditional.sol\":346:348  40 */\n      0x28\n        /* \"day12(contitionls statement)/conditional.sol\":341:344  age */\n      dup4\n        /* \"day12(contitionls statement)/conditional.sol\":341:348  age<=40 */\n      gt\n      iszero\n        /* \"day12(contitionls statement)/conditional.sol\":330:348  age>=18 && age<=40 */\n    tag_14:\n        /* \"day12(contitionls statement)/conditional.sol\":327:454  if(age>=18 && age<=40){\r... */\n      iszero\n      tag_15\n      jumpi\n        /* \"day12(contitionls statement)/conditional.sol\":364:383  str=\"you are Adult\" */\n      0x40\n      dup1\n      mload\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      0xd\n      dup2\n      mstore\n      0x20\n      add\n      0x796f7520617265204164756c7400000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"day12(contitionls statement)/conditional.sol\":327:454  if(age>=18 && age<=40){\r... */\n      jump(tag_16)\n    tag_15:\n        /* \"day12(contitionls statement)/conditional.sol\":425:442  str=\"you are Old\" */\n      0x40\n      dup1\n      mload\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      0xb\n      dup2\n      mstore\n      0x20\n      add\n      0x796f7520617265204f6c64000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"day12(contitionls statement)/conditional.sol\":327:454  if(age>=18 && age<=40){\r... */\n    tag_16:\n        /* \"day12(contitionls statement)/conditional.sol\":256:454  if(age<18){\r... */\n    tag_13:\n        /* \"day12(contitionls statement)/conditional.sol\":471:474  str */\n      dup1\n        /* \"day12(contitionls statement)/conditional.sol\":464:474  return str */\n      swap2\n      pop\n      pop\n        /* \"day12(contitionls statement)/conditional.sol\":158:482  function check(uint age) public view returns(string memory){\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058209fdf16b0c9637f7a462160c8213b7326c2c2ea856615a23deabe2692bc5286790029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610206806100206000396000f3fe608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680635f72f45014610046575b600080fd5b34801561005257600080fd5b5061007f6004803603602081101561006957600080fd5b81019080803590602001909291905050506100fa565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100bf5780820151818401526020810190506100a4565b50505050905090810190601f1680156100ec5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6060806012831015610143576040805190810160405280600d81526020017f796f7520617265204368696c640000000000000000000000000000000000000081525090506101d1565b60128310158015610155575060288311155b15610197576040805190810160405280600d81526020017f796f7520617265204164756c740000000000000000000000000000000000000081525090506101d0565b6040805190810160405280600b81526020017f796f7520617265204f6c6400000000000000000000000000000000000000000081525090505b5b8091505091905056fea165627a7a723058209fdf16b0c9637f7a462160c8213b7326c2c2ea856615a23deabe2692bc5286790029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x206 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x5F72F450 EQ PUSH2 0x46 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA4 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xEC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x12 DUP4 LT ISZERO PUSH2 0x143 JUMPI PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x796F7520617265204368696C6400000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1D1 JUMP JUMPDEST PUSH1 0x12 DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x155 JUMPI POP PUSH1 0x28 DUP4 GT ISZERO JUMPDEST ISZERO PUSH2 0x197 JUMPI PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x796F7520617265204164756C7400000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x796F7520617265204F6C64000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 SWAP16 0xdf AND 0xb0 0xc9 PUSH4 0x7F7A4621 PUSH1 0xC8 0x21 EXTCODESIZE PUSH20 0x26C2C2EA856615A23DEABE2692BC528679002900 ",
							"sourceMap": "68:417:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;68:417:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680635f72f45014610046575b600080fd5b34801561005257600080fd5b5061007f6004803603602081101561006957600080fd5b81019080803590602001909291905050506100fa565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100bf5780820151818401526020810190506100a4565b50505050905090810190601f1680156100ec5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6060806012831015610143576040805190810160405280600d81526020017f796f7520617265204368696c640000000000000000000000000000000000000081525090506101d1565b60128310158015610155575060288311155b15610197576040805190810160405280600d81526020017f796f7520617265204164756c740000000000000000000000000000000000000081525090506101d0565b6040805190810160405280600b81526020017f796f7520617265204f6c6400000000000000000000000000000000000000000081525090505b5b8091505091905056fea165627a7a723058209fdf16b0c9637f7a462160c8213b7326c2c2ea856615a23deabe2692bc5286790029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x5F72F450 EQ PUSH2 0x46 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBF JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA4 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xEC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x12 DUP4 LT ISZERO PUSH2 0x143 JUMPI PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x796F7520617265204368696C6400000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1D1 JUMP JUMPDEST PUSH1 0x12 DUP4 LT ISZERO DUP1 ISZERO PUSH2 0x155 JUMPI POP PUSH1 0x28 DUP4 GT ISZERO JUMPDEST ISZERO PUSH2 0x197 JUMPI PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x796F7520617265204164756C7400000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x796F7520617265204F6C64000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 SWAP16 0xdf AND 0xb0 0xc9 PUSH4 0x7F7A4621 PUSH1 0xC8 0x21 EXTCODESIZE PUSH20 0x26C2C2EA856615A23DEABE2692BC528679002900 ",
							"sourceMap": "68:417:0:-;;;;;;;;;;;;;;;;;;;;;;;;158:324;;8:9:-1;5:2;;;30:1;27;20:12;5:2;158:324:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;158:324:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;158:324:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;203:13;228:17;263:2;259:3;:6;256:198;;;281:19;;;;;;;;;;;;;;;;;;;;256:198;;;335:2;330:3;:7;;:18;;;;;346:2;341:3;:7;;330:18;327:127;;;364:19;;;;;;;;;;;;;;;;;;;;327:127;;;425:17;;;;;;;;;;;;;;;;;;;;327:127;256:198;471:3;464:10;;;158:324;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "103600",
								"executionCost": "153",
								"totalCost": "103753"
							},
							"external": {
								"check(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 68,
									"end": 485,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 68,
									"end": 485,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 68,
									"end": 485,
									"name": "MSTORE"
								},
								{
									"begin": 68,
									"end": 485,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 68,
									"end": 485,
									"name": "POP"
								},
								{
									"begin": 68,
									"end": 485,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 68,
									"end": 485,
									"name": "DUP1"
								},
								{
									"begin": 68,
									"end": 485,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 68,
									"end": 485,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 68,
									"end": 485,
									"name": "CODECOPY"
								},
								{
									"begin": 68,
									"end": 485,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 68,
									"end": 485,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058209fdf16b0c9637f7a462160c8213b7326c2c2ea856615a23deabe2692bc5286790029",
									".code": [
										{
											"begin": 68,
											"end": 485,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 68,
											"end": 485,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 68,
											"end": 485,
											"name": "MSTORE"
										},
										{
											"begin": 68,
											"end": 485,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 68,
											"end": 485,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 68,
											"end": 485,
											"name": "LT"
										},
										{
											"begin": 68,
											"end": 485,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 68,
											"end": 485,
											"name": "JUMPI"
										},
										{
											"begin": 68,
											"end": 485,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 68,
											"end": 485,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 68,
											"end": 485,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 68,
											"end": 485,
											"name": "SWAP1"
										},
										{
											"begin": 68,
											"end": 485,
											"name": "DIV"
										},
										{
											"begin": 68,
											"end": 485,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 68,
											"end": 485,
											"name": "AND"
										},
										{
											"begin": 68,
											"end": 485,
											"name": "DUP1"
										},
										{
											"begin": 68,
											"end": 485,
											"name": "PUSH",
											"value": "5F72F450"
										},
										{
											"begin": 68,
											"end": 485,
											"name": "EQ"
										},
										{
											"begin": 68,
											"end": 485,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 68,
											"end": 485,
											"name": "JUMPI"
										},
										{
											"begin": 68,
											"end": 485,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 68,
											"end": 485,
											"name": "JUMPDEST"
										},
										{
											"begin": 68,
											"end": 485,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 68,
											"end": 485,
											"name": "DUP1"
										},
										{
											"begin": 68,
											"end": 485,
											"name": "REVERT"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "JUMPDEST"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "POP"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "DUP1"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "DUP2"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "ADD"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "SWAP1"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "DUP1"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "DUP1"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "SWAP1"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "ADD"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "SWAP1"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "SWAP3"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "SWAP2"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "SWAP1"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "POP"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "POP"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "POP"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "JUMP"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "JUMPDEST"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "MLOAD"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "DUP1"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "DUP1"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "ADD"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "DUP3"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "DUP2"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "SUB"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "DUP3"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "MSTORE"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "DUP4"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "DUP2"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "DUP2"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "MLOAD"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "DUP2"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "MSTORE"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "ADD"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "SWAP2"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "POP"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "DUP1"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "MLOAD"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "SWAP1"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "ADD"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "SWAP1"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "DUP1"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "DUP4"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "POP"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "POP"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "POP"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "SWAP1"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "POP"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "SWAP1"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "DUP2"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "ADD"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "SWAP1"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "AND"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "DUP1"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "ISZERO"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "JUMPI"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "DUP1"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "DUP3"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "SUB"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "DUP1"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "MLOAD"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "DUP4"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "SUB"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "EXP"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "SUB"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "NOT"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "AND"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "DUP2"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "MSTORE"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "ADD"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "SWAP2"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "POP"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "JUMPDEST"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "POP"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "SWAP3"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "POP"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "POP"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "POP"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "MLOAD"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "DUP1"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "SWAP2"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "SUB"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "SWAP1"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "RETURN"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "JUMPDEST"
										},
										{
											"begin": 203,
											"end": 216,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 228,
											"end": 245,
											"name": "DUP1"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 259,
											"end": 262,
											"name": "DUP4"
										},
										{
											"begin": 259,
											"end": 265,
											"name": "LT"
										},
										{
											"begin": 256,
											"end": 454,
											"name": "ISZERO"
										},
										{
											"begin": 256,
											"end": 454,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 256,
											"end": 454,
											"name": "JUMPI"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "DUP1"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "MLOAD"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "SWAP1"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "DUP2"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "ADD"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "MSTORE"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "DUP1"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "DUP2"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "MSTORE"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "ADD"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "PUSH",
											"value": "796F7520617265204368696C6400000000000000000000000000000000000000"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "DUP2"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "MSTORE"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "POP"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "SWAP1"
										},
										{
											"begin": 281,
											"end": 300,
											"name": "POP"
										},
										{
											"begin": 256,
											"end": 454,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 256,
											"end": 454,
											"name": "JUMP"
										},
										{
											"begin": 256,
											"end": 454,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 256,
											"end": 454,
											"name": "JUMPDEST"
										},
										{
											"begin": 335,
											"end": 337,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 330,
											"end": 333,
											"name": "DUP4"
										},
										{
											"begin": 330,
											"end": 337,
											"name": "LT"
										},
										{
											"begin": 330,
											"end": 337,
											"name": "ISZERO"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "DUP1"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ISZERO"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "JUMPI"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "POP"
										},
										{
											"begin": 346,
											"end": 348,
											"name": "PUSH",
											"value": "28"
										},
										{
											"begin": 341,
											"end": 344,
											"name": "DUP4"
										},
										{
											"begin": 341,
											"end": 348,
											"name": "GT"
										},
										{
											"begin": 341,
											"end": 348,
											"name": "ISZERO"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "JUMPDEST"
										},
										{
											"begin": 327,
											"end": 454,
											"name": "ISZERO"
										},
										{
											"begin": 327,
											"end": 454,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 327,
											"end": 454,
											"name": "JUMPI"
										},
										{
											"begin": 364,
											"end": 383,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 364,
											"end": 383,
											"name": "DUP1"
										},
										{
											"begin": 364,
											"end": 383,
											"name": "MLOAD"
										},
										{
											"begin": 364,
											"end": 383,
											"name": "SWAP1"
										},
										{
											"begin": 364,
											"end": 383,
											"name": "DUP2"
										},
										{
											"begin": 364,
											"end": 383,
											"name": "ADD"
										},
										{
											"begin": 364,
											"end": 383,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 364,
											"end": 383,
											"name": "MSTORE"
										},
										{
											"begin": 364,
											"end": 383,
											"name": "DUP1"
										},
										{
											"begin": 364,
											"end": 383,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 364,
											"end": 383,
											"name": "DUP2"
										},
										{
											"begin": 364,
											"end": 383,
											"name": "MSTORE"
										},
										{
											"begin": 364,
											"end": 383,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 364,
											"end": 383,
											"name": "ADD"
										},
										{
											"begin": 364,
											"end": 383,
											"name": "PUSH",
											"value": "796F7520617265204164756C7400000000000000000000000000000000000000"
										},
										{
											"begin": 364,
											"end": 383,
											"name": "DUP2"
										},
										{
											"begin": 364,
											"end": 383,
											"name": "MSTORE"
										},
										{
											"begin": 364,
											"end": 383,
											"name": "POP"
										},
										{
											"begin": 364,
											"end": 383,
											"name": "SWAP1"
										},
										{
											"begin": 364,
											"end": 383,
											"name": "POP"
										},
										{
											"begin": 327,
											"end": 454,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 327,
											"end": 454,
											"name": "JUMP"
										},
										{
											"begin": 327,
											"end": 454,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 327,
											"end": 454,
											"name": "JUMPDEST"
										},
										{
											"begin": 425,
											"end": 442,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 425,
											"end": 442,
											"name": "DUP1"
										},
										{
											"begin": 425,
											"end": 442,
											"name": "MLOAD"
										},
										{
											"begin": 425,
											"end": 442,
											"name": "SWAP1"
										},
										{
											"begin": 425,
											"end": 442,
											"name": "DUP2"
										},
										{
											"begin": 425,
											"end": 442,
											"name": "ADD"
										},
										{
											"begin": 425,
											"end": 442,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 425,
											"end": 442,
											"name": "MSTORE"
										},
										{
											"begin": 425,
											"end": 442,
											"name": "DUP1"
										},
										{
											"begin": 425,
											"end": 442,
											"name": "PUSH",
											"value": "B"
										},
										{
											"begin": 425,
											"end": 442,
											"name": "DUP2"
										},
										{
											"begin": 425,
											"end": 442,
											"name": "MSTORE"
										},
										{
											"begin": 425,
											"end": 442,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 425,
											"end": 442,
											"name": "ADD"
										},
										{
											"begin": 425,
											"end": 442,
											"name": "PUSH",
											"value": "796F7520617265204F6C64000000000000000000000000000000000000000000"
										},
										{
											"begin": 425,
											"end": 442,
											"name": "DUP2"
										},
										{
											"begin": 425,
											"end": 442,
											"name": "MSTORE"
										},
										{
											"begin": 425,
											"end": 442,
											"name": "POP"
										},
										{
											"begin": 425,
											"end": 442,
											"name": "SWAP1"
										},
										{
											"begin": 425,
											"end": 442,
											"name": "POP"
										},
										{
											"begin": 327,
											"end": 454,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 327,
											"end": 454,
											"name": "JUMPDEST"
										},
										{
											"begin": 256,
											"end": 454,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 256,
											"end": 454,
											"name": "JUMPDEST"
										},
										{
											"begin": 471,
											"end": 474,
											"name": "DUP1"
										},
										{
											"begin": 464,
											"end": 474,
											"name": "SWAP2"
										},
										{
											"begin": 464,
											"end": 474,
											"name": "POP"
										},
										{
											"begin": 464,
											"end": 474,
											"name": "POP"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "SWAP2"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "SWAP1"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "POP"
										},
										{
											"begin": 158,
											"end": 482,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"check(uint256)": "5f72f450"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"age\",\"type\":\"uint256\"}],\"name\":\"check\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"day12(contitionls statement)/conditional.sol\":\"ConditionsStatements\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"day12(contitionls statement)/conditional.sol\":{\"keccak256\":\"0x0fbc827b73d020933843ee29e65798e074bdc7a0a2bcca90fb7127308dcf0102\",\"urls\":[\"bzzr://cdb93bc51455fd5d1438e23b22fb851fc5d38ad65343db9ad60dcf83ab2018fa\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "day12(contitionls statement)/conditional.sol:6:5: Warning: Function state mutability can be restricted to pure\n    function check(uint age) public view returns(string memory){\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 482,
					"file": "day12(contitionls statement)/conditional.sol",
					"start": 158
				},
				"type": "Warning"
			}
		],
		"sources": {
			"day12(contitionls statement)/conditional.sol": {
				"ast": {
					"absolutePath": "day12(contitionls statement)/conditional.sol",
					"exportedSymbols": {
						"ConditionsStatements": [
							42
						]
					},
					"id": 43,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 42,
							"linearizedBaseContracts": [
								42
							],
							"name": "ConditionsStatements",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "217:265:0",
										"statements": [
											{
												"assignments": [
													9
												],
												"declarations": [
													{
														"constant": false,
														"id": 9,
														"name": "str",
														"nodeType": "VariableDeclaration",
														"scope": 40,
														"src": "228:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 8,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "228:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 10,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "228:17:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 11,
														"name": "age",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "259:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "263:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "259:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 25,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 19,
																"name": "age",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "330:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3138",
																"id": 20,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "335:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_18_by_1",
																	"typeString": "int_const 18"
																},
																"value": "18"
															},
															"src": "330:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 22,
																"name": "age",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "341:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "3430",
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "346:2:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_40_by_1",
																	"typeString": "int_const 40"
																},
																"value": "40"
															},
															"src": "341:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "330:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 35,
														"nodeType": "Block",
														"src": "410:44:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 33,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 31,
																		"name": "str",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 9,
																		"src": "425:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "796f7520617265204f6c64",
																		"id": 32,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "429:13:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_158882f4f5befef5a7e778074ebbeb099411ec8cc1614f8c53ab006f4f51dbc1",
																			"typeString": "literal_string \"you are Old\""
																		},
																		"value": "you are Old"
																	},
																	"src": "425:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"id": 34,
																"nodeType": "ExpressionStatement",
																"src": "425:17:0"
															}
														]
													},
													"id": 36,
													"nodeType": "IfStatement",
													"src": "327:127:0",
													"trueBody": {
														"id": 30,
														"nodeType": "Block",
														"src": "349:46:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 28,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 26,
																		"name": "str",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 9,
																		"src": "364:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"hexValue": "796f7520617265204164756c74",
																		"id": 27,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "368:15:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_ee48babda57bc5ec3ee6b2eaeee8661de4c7c2942e92cc3ba1182d8ce396c0c5",
																			"typeString": "literal_string \"you are Adult\""
																		},
																		"value": "you are Adult"
																	},
																	"src": "364:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"id": 29,
																"nodeType": "ExpressionStatement",
																"src": "364:19:0"
															}
														]
													}
												},
												"id": 37,
												"nodeType": "IfStatement",
												"src": "256:198:0",
												"trueBody": {
													"id": 18,
													"nodeType": "Block",
													"src": "266:46:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 14,
																	"name": "str",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "281:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "796f7520617265204368696c64",
																	"id": 15,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "285:15:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_fc1c36712592590e03b4c11aadff96958ae8ba5926931a63a2b0e81214b87708",
																		"typeString": "literal_string \"you are Child\""
																	},
																	"value": "you are Child"
																},
																"src": "281:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"id": 17,
															"nodeType": "ExpressionStatement",
															"src": "281:19:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 38,
													"name": "str",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 9,
													"src": "471:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 7,
												"id": 39,
												"nodeType": "Return",
												"src": "464:10:0"
											}
										]
									},
									"documentation": null,
									"id": 41,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "check",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"name": "age",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "173:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "173:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "172:10:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "203:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 5,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "203:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "202:15:0"
									},
									"scope": 42,
									"src": "158:324:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 43,
							"src": "68:417:0"
						}
					],
					"src": "33:452:0"
				},
				"id": 0
			}
		}
	}
}